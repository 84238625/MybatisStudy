<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.how2java.pojo">

<!--    这条sql语句用id: listCategory 进行标示以供后续代码调用。
resultType="Category" 表示返回的数据和Category关联起来，这里本应该使用的是 com.how2java.pojo.Category,
但是因为上一步配置了别名，所以直接使用Category就行了-->
    <select id="listCategory" resultType="Category">
            select * from   category_
        </select>
    <insert id="addCategory" parameterType="Category">
        insert into category_ (name) values(#{name})
    </insert>
    <delete id="deleteCategory" parameterType="Category">
        delete from category_ where id=#{id}
    </delete>
    <update id="updateCategory" parameterType="Category">
            update category_ set name=#{name} where id=#{id}
    </update>
    <select id="getCategory" parameterType="_int" resultType="Category">
            select * from   category_  where id= #{id}
        </select>


    <!--concat() 函数，是用来连接字符串。

      精确查询： select * from user where name=”zhangsan”
      模糊查询； select * from user where name like “%zhang%”

      在实际的使用中，条件是作为参数传递进来的。 所以我们使用 concat() 函数

      mybatis:
      select * from user where name like concat(“%”, #{name},”%”)

      concat(str1,str2,str3,str4,……….); 连接字符串函数，会生成一个字符串-->
    <select id="listCategoryByName" parameterType="string" resultType="Category">
        select * from category_ where name like concat("%",#{0},"%")
    </select>


<!--    多条件查询(这里查询的是id>*且name like *)-->
    <select id="listCategoryByIdAndName" parameterType="map" resultType="Category">
        select * from category_ where id>#{id} and name like concat("%",#{name},"%")
    </select>

</mapper>






